module audio_player(
    input wire clk,
    input wire rst,
    output reg [7:0] audio_data,
    output wire left_audio_out,
    output wire right_audio_out
);

reg [20:0] address; // Use a 21-bit address (2^21 = 2097152 locations)
reg [7:0] memory [0:2**21-1]; // Adjust the size according to your audio data size

integer file; // Declare variables outside the initial block
integer index;

// Memory initialization
initial begin
    file = $fopen("4g.hex", "r");
    for (index = 0; index < 2**21; index = index + 1) begin // Update loop limit to match memory size
        if (!$feof(file)) begin
            $fscanf(file, "%h", memory[index]);
        end else begin
            memory[index] = 8'h00;
        end
    end
    $fclose(file);
end

always @(posedge clk or posedge rst) begin
    if (rst) begin
        address <= 21'h00000; // Update reset value to match address width
        audio_data <= 8'h00;
    end else begin
        address <= address + 1;
        audio_data <= memory[address];
    end
end

assign left_audio_out = audio_data;
assign right_audio_out = audio_data;

endmodule
